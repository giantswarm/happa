version: 2.1
orbs:
  architect: giantswarm/architect@4.9.0

defaults: &defaults
  working_directory: ~/happa
  docker:
    - image: cimg/node:16.13

job_filters: &job_filters
  filters:
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
    branches:
      only: /.*/

whitelist: &whitelist
  paths:
    - dist/*
    - storybook-static/*
    - node_modules/*
    - VERSION
    - ".sentry_release_version"

image_name: &image_name quay.io/giantswarm/happa
image_name_fe_docs: &image_name_fe_docs quay.io/giantswarm/fe-docs

workflows:
  version: 2

  build:
    jobs:
      - checkout:
          <<: *job_filters
      - gather-facts:
          requires:
            - checkout
          <<: *job_filters
      - test:
          requires:
            - checkout
          <<: *job_filters
      - lint:
          requires:
            - checkout
          <<: *job_filters
      - prettier:
          requires:
            - checkout
          <<: *job_filters
      - typecheck:
          requires:
            - checkout
          <<: *job_filters
      - build:
          requires:
            - gather-facts
          <<: *job_filters
      - build-container:
          requires:
            - test
            - lint
            - prettier
            - typecheck
            - build
          <<: *job_filters

      - architect/push-to-docker:
          name: push-happa-to-docker
          context: "architect"
          image: "docker.io/giantswarm/happa"
          username_envar: "DOCKER_USERNAME"
          password_envar: "DOCKER_PASSWORD"
          requires:
            - build-container
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-docker:
          name: push-happa-to-quay
          context: architect
          image: *image_name
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
          requires:
            - build-container
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-docker:
          name: push-happa-to-aliyun
          context: architect
          image: "registry-intl.cn-shanghai.aliyuncs.com/giantswarm/happa"
          username_envar: "ALIYUN_USERNAME"
          password_envar: "ALIYUN_PASSWORD"
          requires:
            - build-container
          # Needed to trigger job only on git tag.
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-happa-to-control-plane-app-catalog
          app_catalog: "control-plane-catalog"
          app_catalog_test: "control-plane-test-catalog"
          chart: "happa"
          requires:
            - push-happa-to-quay
            - push-happa-to-docker
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-shared-app-collection
          app_name: "happa"
          app_collection_repo: "shared-app-collection"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-aws-app-collection
          app_name: "happa"
          app_collection_repo: "aws-app-collection"
          requires:
            - push-happa-to-aliyun
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-azure-app-collection
          app_name: "happa"
          app_collection_repo: "azure-app-collection"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-kvm-app-collection
          app_name: "happa"
          app_collection_repo: "kvm-app-collection"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-vmware-app-collection
          app_name: "happa"
          app_collection_repo: "vmware-app-collection"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      # FE Docs

      - build-fe-docs:
          requires:
            - checkout
          <<: *job_filters

      - build-fe-docs-container:
          requires:
            - build-fe-docs
          <<: *job_filters

      - architect/push-to-docker:
          name: push-fe-docs-to-quay
          context: architect
          image: *image_name_fe_docs
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
          dockerfile: "./Dockerfile.fe-docs"
          requires:
            - build-fe-docs-container
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-fe-docs-to-operations-platform-app-catalog
          context: architect
          app_catalog: "giantswarm-operations-platform-catalog"
          app_catalog_test: "giantswarm-operations-platform-test-catalog"
          chart: "fe-docs"
          explicit_allow_chart_name_mismatch: true
          requires:
            - push-fe-docs-to-quay
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-npm-deps-{{ checksum "yarn.lock" }}
          - v1-npm-deps-

      - run:
          name: Print version information
          command: |
            node --version
            yarn --version

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  gather-facts:
    executor: architect/architect

    working_directory: ~/happa
    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Create VERSION file
          command: |
            echo -n "$(architect project version)" > VERSION
            echo "$(cat VERSION)"

      - run:
          name: Determine Sentry project release version
          command: |
            echo -n "happa@$(cat VERSION)" > .sentry_release_version
            echo "$(cat .sentry_release_version)"

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  typecheck:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Typecheck code using the TypeScript compiler
          command: yarn run typecheck

  lint:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Lint code using ESlint
          command: yarn run lint --no-color

  prettier:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Validate code style using prettier
          command: yarn run validate-prettier --no-color

  test:
    <<: *defaults
    resource_class: xlarge

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Run tests
          command: yarn run test --maxWorkers 4

  build:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Build web application
          command: SENTRY_RELEASE_VERSION="$(cat .sentry_release_version)" yarn run dist
          environment:
            NODE_ENV: production
            SENTRY_UPLOAD_SOURCEMAPS: 'true'


      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  build-container:
    executor: architect/architect

    working_directory: ~/happa
    steps:
      - checkout

      - setup_remote_docker

      - attach_workspace:
          at: ~/happa

      - run:
          environment:
            IMAGE_NAME: *image_name
          name: Generate container image tag
          command: |
            echo -n "${IMAGE_NAME}:$(cat VERSION)" > .docker_image_name

      - run:
          name: Build Docker image
          command: |
            docker build -t "$(cat .docker_image_name)" .

      - run:
          name: Launch container for tests
          command: |
            set -x
            docker run --name happa-branch \
              -p 8000:8000 \
              -d \
              "$(cat .docker_image_name)"
            sleep 10
            CURL_OUTPUT=$(ssh remote-docker "curl -s http://localhost:8000")
            echo "${CURL_OUTPUT}" | grep "Giant Swarm web interface"

  build-fe-docs:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Build FE Docs static assets
          command: NODE_ENV=production yarn run storybook:build

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  build-fe-docs-container:
    executor: architect/architect

    working_directory: ~/happa
    steps:
      - checkout

      - setup_remote_docker

      - attach_workspace:
          at: ~/happa

      - run:
          environment:
            IMAGE_NAME: *image_name_fe_docs
          name: Generate container image tag
          command: |
            echo -n "${IMAGE_NAME}:$(architect project version)" > .docker_image_name_fe_docs

      - run:
          name: Build Docker image
          command: |
            docker build -t "$(cat .docker_image_name_fe_docs)" . --file "./Dockerfile.fe-docs"
