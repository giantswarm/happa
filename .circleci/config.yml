version: 2.1
orbs:
  architect: giantswarm/architect@0.8.9

defaults: &defaults
  working_directory: ~/happa
  docker:
    - image: circleci/node:12-buster

whitelist: &whitelist
  paths:
    - dist/*
    - node_modules/*
    - VERSION

workflows:
  version: 2

  build:
    jobs:
      - checkout:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              only: /.*/
      - test:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
      - prettier:
          requires:
            - checkout
      - typecheck:
          requires:
            - checkout
      - build:
          requires:
            - checkout
      - build-container:
          requires:
            - test
            - lint
            - prettier
            - typecheck
            - build

      - architect/push-to-docker-legacy:
          name: push-happa-to-aliyun-master
          image: 'registry-intl.cn-shanghai.aliyuncs.com/giantswarm/happa'
          username_envar: 'ALIYUN_USERNAME'
          password_envar: 'ALIYUN_PASSWORD'
          requires:
            - build-container
          filters:
            branches:
              only: master
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
      - deploy-to-all:
          requires:
            - build-container
            - push-happa-to-aliyun-master
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
      - deploy-to-testing:
          requires:
            - build-container
            - push-happa-to-aliyun-master
          filters:
            branches:
              only:
                - master

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-npm-deps-{{ checksum "yarn.lock" }}
          - v1-npm-deps-

      - run:
          name: Print version information
          command: |
            node --version
            yarn --version

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  typecheck:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Typecheck code using the TypeScript compiler
          command: yarn run typecheck

  lint:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Validate code style using prettier
          command: yarn run validate-prettier --no-color

  prettier:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Validate code style using prettier
          command: yarn run validate-prettier --no-color

  test:
    <<: *defaults
    resource_class: large

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Run tests
          command: yarn run test

  build:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Build web application
          command: NODE_ENV=production yarn run dist

      - run:
          name: Create VERSION file
          command: |
            tag=$(git tag --points-at HEAD)
            if [ -z "$tag" ]
            then
              git rev-parse HEAD > VERSION
            else
              git tag --points-at HEAD | tr '\n' ' ' > VERSION
            fi

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  build-container:
    machine:
      image: ubuntu-1604:201903-01

    working_directory: ~/happa
    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Build Docker image
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect build

      - run:
          name: Launch container for tests
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              docker pull quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
              docker run --name happa-master -e API_ENDPOINT=test -e PASSAGE_ENDPOINT=test -e INGRESS_BASE_DOMAIN=test -e AWS_CAPABILITIES_JSON={} -e AZURE_CAPABILITIES_JSON={} -e ENVIRONMENT=test-in-ci -d quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
            fi

            docker run --name happa-branch -e API_ENDPOINT=test -e PASSAGE_ENDPOINT=test -e INGRESS_BASE_DOMAIN=test -e AWS_CAPABILITIES_JSON={} -e AZURE_CAPABILITIES_JSON={} -e ENVIRONMENT=test-in-ci -p 8000:8000 -d quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
            sleep 2
            CURL_OUTPUT=$(curl -s http://localhost:8000)
            echo "${CURL_OUTPUT}" | grep Happa

  deploy-to-testing:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - deploy:
          name: Deploy with architect to testing envs
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect deploy --group=testing

  deploy-to-all:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - deploy:
          name: Deploy with architect to all envs
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect deploy
