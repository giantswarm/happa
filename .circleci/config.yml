version: 2.1
orbs:
  architect: giantswarm/architect@0.8.7

workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              only: /.*/
      - architect/push-to-docker-legacy:
          name: push-happa-to-aliyun-master
          image: 'registry-intl.cn-shanghai.aliyuncs.com/giantswarm/happa'
          username_envar: 'ALIYUN_USERNAME'
          password_envar: 'ALIYUN_PASSWORD'
          requires:
            - build
      - deploy-to-all:
          requires:
            - build
            - push-happa-to-aliyun-master
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
      - deploy-to-testing:
          requires:
            - build
            - push-happa-to-aliyun-master
          filters:
            branches:
              only:
                - master

jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install node@12
          command: |
            set +e
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            # Check if we're running the newest node 12 version
            if [ "$(nvm version-remote v12)" != "$NODE_VERSION" ]
            then
              echo "Please upgrade the NODE_VERSION variable to $(nvm version-remote v12)"
              exit 1
            fi

            nvm install "$NODE_VERSION"
            nvm alias default "$NODE_VERSION"

            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      - run:
          name: Install yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install -y yarn

      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # created in this month.
            - v1-npm-deps-{{ checksum "yarn.lock" }}

      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile

      - run:
          name: Typecheck code using the TypeScript compiler
          command: yarn run typecheck

      - run:
          name: Lint code using ESlint
          command: yarn run lint

      - run:
          name: Validate code style using prettier
          command: yarn run validate-prettier --no-color

      - run:
          name: Run tests
          command: yarn run test

      - run:
          name: Build web application
          command: NODE_ENV=production yarn run dist

      - run:
          name: Create VERSION file
          command: |
            tag=$(git tag --points-at HEAD)
            if [ -z "$tag" ]
            then
              git rev-parse HEAD > VERSION
            else
              git tag --points-at HEAD | tr '\n' ' ' > VERSION
            fi

      - run:
          name: Build Docker image
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect build

      - run:
          name: Launch container for tests
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              docker pull quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
              docker run --name happa-master -e API_ENDPOINT=test -e PASSAGE_ENDPOINT=test -e INGRESS_BASE_DOMAIN=test -e AWS_CAPABILITIES_JSON={} -e AZURE_CAPABILITIES_JSON={} -e ENVIRONMENT=test-in-ci -d quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
            fi

            docker run --name happa-branch -e API_ENDPOINT=test -e PASSAGE_ENDPOINT=test -e INGRESS_BASE_DOMAIN=test -e AWS_CAPABILITIES_JSON={} -e AZURE_CAPABILITIES_JSON={} -e ENVIRONMENT=test-in-ci -p 8000:8000 -d quay.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
            sleep 2
            CURL_OUTPUT=$(curl -s http://localhost:8000)
            echo "${CURL_OUTPUT}" | grep Happa

      - save_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

  deploy-to-testing:
    machine: true
    steps:
      - checkout
      - deploy:
          name: Deploy with architect to testing envs
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect deploy --group=testing

  deploy-to-all:
    machine: true
    steps:
      - checkout
      - deploy:
          name: Deploy with architect to all envs
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect deploy
