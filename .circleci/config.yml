version: 2.1
orbs:
  architect: giantswarm/architect@0.10.0

defaults: &defaults
  working_directory: ~/happa
  docker:
    - image: circleci/node:12-buster

job_filters: &job_filters
  filters:
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
    branches:
      only: /.*/

whitelist: &whitelist
  paths:
    - dist/*
    - node_modules/*
    - VERSION

image_name: &image_name quay.io/giantswarm/happa

workflows:
  version: 2

  build:
    jobs:
      - checkout:
          <<: *job_filters
      - test:
          requires:
            - checkout
          <<: *job_filters
      - lint:
          requires:
            - checkout
          <<: *job_filters
      - prettier:
          requires:
            - checkout
          <<: *job_filters
      - typecheck:
          requires:
            - checkout
          <<: *job_filters
      - build:
          requires:
            - checkout
          <<: *job_filters
      - build-container:
          requires:
            - test
            - lint
            - prettier
            - typecheck
            - build
          <<: *job_filters

      - architect/push-to-docker:
          name: push-happa-to-quay
          context: architect
          image: *image_name
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
          requires:
            - build-container
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-docker:
          name: push-happa-to-aliyun
          context: architect
          image: "registry-intl.cn-shanghai.aliyuncs.com/giantswarm/happa"
          username_envar: "ALIYUN_USERNAME"
          password_envar: "ALIYUN_PASSWORD"
          requires:
            - build-container
          # Needed to trigger job only on git tag.
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/

      - architect/push-to-app-catalog:
          name: push-happa-to-control-plane-app-catalog
          context: architect
          app_catalog: "control-plane-catalog"
          app_catalog_test: "control-plane-test-catalog"
          chart: "happa"
          requires:
            - push-happa-to-quay
          # Needed to trigger job also on git tag.
          filters:
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-aws-app-collection
          context: architect
          app_name: "happa"
          app_collection_repo: "aws-app-collection"
          unique: "true"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-azure-app-collection
          context: architect
          app_name: "happa"
          app_collection_repo: "azure-app-collection"
          unique: "true"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - architect/push-to-app-collection:
          name: push-happa-to-kvm-app-collection
          context: architect
          app_name: "happa"
          app_collection_repo: "kvm-app-collection"
          unique: "true"
          requires:
            - push-happa-to-control-plane-app-catalog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-npm-deps-{{ checksum "yarn.lock" }}
          - v1-npm-deps-

      - run:
          name: Print version information
          command: |
            node --version
            yarn --version

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  typecheck:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Typecheck code using the TypeScript compiler
          command: yarn run typecheck

  lint:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Lint code using ESlint
          command: yarn run lint --no-color

  prettier:
    <<: *defaults

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Validate code style using prettier
          command: yarn run validate-prettier --no-color

  test:
    <<: *defaults
    resource_class: xlarge

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Run tests
          command: yarn run test

  build:
    <<: *defaults
    resource_class: xlarge

    steps:
      - checkout

      - attach_workspace:
          at: ~/happa

      - run:
          name: Build web application
          command: NODE_ENV=production yarn run dist

      - run:
          name: Create VERSION file
          command: |
            tag=$(git tag --points-at HEAD)
            if [ -z "$tag" ]
            then
              git rev-parse HEAD > VERSION
            else
              git tag --points-at HEAD | tr '\n' ' ' > VERSION
            fi

      - persist_to_workspace:
          root: ~/happa
          <<: *whitelist

  build-container:
    executor: architect/architect

    working_directory: ~/happa
    steps:
      - checkout

      - setup_remote_docker

      - attach_workspace:
          at: ~/happa

      - run:
          environment:
            IMAGE_NAME: *image_name
          name: Generate container image tag
          command: |
            echo -n "${IMAGE_NAME}:$(architect project version)" > .docker_image_name

      - run:
          name: Build Docker image
          command: |
            docker build -t "$(cat .docker_image_name)" .

      - run:
          name: Launch container for tests
          command: |
            set -x
            docker run --name happa-branch \
              -e DEFAULT_REQUEST_TIMEOUT_SECONDS=10 \
              -e AUDIENCE=test \
              -e CP_AUDIENCE=test \
              -e API_ENDPOINT=test \
              -e CP_API_ENDPOINT=test \
              -e PASSAGE_ENDPOINT=test \
              -e INGRESS_BASE_DOMAIN=test \
              -e AWS_CAPABILITIES_JSON={} \
              -e AZURE_CAPABILITIES_JSON={} \
              -e ENVIRONMENT=test-in-ci \
              -e ENABLE_RUM=TRUE \
              -p 8000:8000 \
              -d \
              "$(cat .docker_image_name)"
            sleep 2
            CURL_OUTPUT=$(ssh remote-docker "curl -s http://localhost:8000")
            echo "${CURL_OUTPUT}" | grep Happa
