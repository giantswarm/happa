version: "2"
services:
  happa:
    build:
      context: ./
      dockerfile: Dockerfile.dev
    image: happa-dev:latest
    command: npm start
    ports:
      - "8000:8000"
    volumes:
      - "./src:/usr/src/app/src"
    links:
      - passage

  passage:
    image: quay.io/giantswarm/passage:latest
    ports:
      - "5001:8000"

    environment:
      DEBUGGING: 1
      HAPPA_BASE_URI: http://localhost:8000
      GIANTSWARM_API_URI: http://api:8000
      GIANTSWARM_API_TOKEN: test
      HUBSPOT_API_URI: http://hubspotmock:9999
      HUBSPOT_HUB_ID: "430224"
      HUBSPOT_API_KEY: 1234567890abcdefghijklmnop
      #NUM_PROXIES: "0"
      RATELIMIT_GLOBAL: 1000 per day, 100 per hour, 30 per minute
      RATELIMIT_STORAGE_URL: redis://redis:6379

    links:
      - hubspotmock
      - api
      - redis:redis
      - mailcatcher:mailcatcher

  redis:
    image: redis:3.2
    ports:
      - "6379:6379"

  # Mocks the HubSpot API
  hubspotmock:
    image: registry.giantswarm.io/giantswarm/mock-hubspot-api:latest
    environment:
      DEBUGGING: 1
    ports:
      - "9999:9999"

  mailcatcher:
    image: quay.io/giantswarm/mailcatcher:latest
    ports:
      - "1080:1080"
      - "1025:1025"

  desmotes:
    image: quay.io/giantswarm/desmotes:latest
    ports:
      - "9001:5000"
    environment:
      GIANTSWARM_API_URI: http://api:8000
      PROMETHEUS_URI: http://prometheus:9090
      PROMETHEUS_QUERY_TIMEOUT: 3.0
      CORS_BASE_URI: http://localhost:8000
      PROMETHEUS_USER: prometheus_dev_user
      PROMETHEUS_PASSWORD: prometheus_dev_password
      CACHE_KEY_SALT: dev_salt
      DEBUGGING: yeah
      REDIS_HOST: redis
      REDIS_PORT: "6379"

    depends_on:
     - redis
     - api
     - prometheus

  prometheus:
    image: registry.giantswarm.io/giantswarm/fake-metrics-prometheus:latest
    ports:
      - "9090:9090"
    links:
      - fake-metrics-node

  fake-metrics-node:
    image: registry.giantswarm.io/giantswarm/fake-metrics-node:latest
    environment:
      CLUSTER_SERVICE_ETCD_ENDPOINT: "http://etcd:2379"
    links:
      - etcd

######################
## DOMAIN VALIDATOR ##
######################

  # domain-validator:
  #   image: registry.giantswarm.io/giantswarm/domain-validator
  #   depends_on:
  #     - nsqd
  #     - couchdb
  #   ports:
  #     - "5002:5000"
  #   environment:
  #     NSQD_HTTP_ENDPOINT: http://nsqd:4151
  #     DEBUGGING: "YEAH"
  #     GIANTSWARM_API_URI: http://api:8000
  #     GIANTSWARM_ADMIN_TOKEN:
  #     REDIS_HOST: redis
  #     REDIS_PORT: "6379"
  #     CORS_BASE_URI: http://localhost:8000
  #     CACHE_KEY_SALT: 793857234kjnsdfkjn128ed3ubnkdn2398e
  #     TOPIC_DOMAIN_VALIDATION: domain_validation
  #     COUCHDB_USER: meister
  #     COUCHDB_PASSWORD: a27r0df0912nbogd094t
  #     COUCHDB_HOST: couchdb
  #     COUCHDB_DBNAME: domains

  # couchdb:
  #   image: couchdb:1.6.1
  #   ports:
  #     - "5984:5984"
  #   environment:
  #     COUCHDB_USER: meister
  #     COUCHDB_PASSWORD: a27r0df0912nbogd094t

  # nsqlookupd:
  #   image: nsqio/nsq:v0.3.8
  #   command: /nsqlookupd
  #   ports:
  #     - "4160:4160"
  #     - "4161:4161"

  # nsqd:
  #   image: nsqio/nsq:v0.3.8
  #   command: >
  #     /nsqd --lookupd-tcp-address=nsqlookupd:4160
  #           --broadcast-address=nsqd
  #           --msg-timeout="100s"
  #           --max-msg-timeout=48h
  #           --verbose=true

  #   ports:
  #     - "4150:4150"
  #     - "4151:4151"
  #     - "4152:4152"

  #   volumes:
  #     - ./certificates:/certs

  # nsqadmin:
  #   image: nsqio/nsq:v0.3.8
  #   command: >
  #     /nsqadmin --lookupd-http-address=nsqlookupd:4161
  #   ports:
  #     - "4171:4171"

  # worker:
  #   image: registry.giantswarm.io/giantswarm/domain-validator-worker
  #   depends_on:
  #     - nsqlookupd
  #     - couchdb
  #   volumes:
  #     - ./certificates:/certs
  #   environment:
  #     LOG_LEVEL: DEBUG
  #     NSQLOOKUPD_HTTP_ADDRESSES: "nsqlookupd:4161"
  #     TOPIC: domain_validation
  #     CHANNEL: default
  #     MAX_TASK_AGE: "86400"
  #     MAX_BACKOFF_DURATION: "60"
  #     MAX_TRIES: "1000"
  #     MAX_IN_FLIGHT: "1"
  #     POLL_INTERVAL: "5"
  #     NAMESERVERS: 8.8.8.8 8.8.4.4
  #     DNS_TIMEOUT: "5"
  #     DNS_LIFETIME: "7"
  #     COUCHDB_USER: meister
  #     COUCHDB_PASSWORD: a27r0df0912nbogd094t
  #     COUCHDB_HOST: couchdb
  #     COUCHDB_DBNAME: domains

#########
## API ##
#########

  api:
    image: quay.io/giantswarm/api:latest
    command: daemon --server.listen.address=http://0.0.0.0:8000
                    --add-admin-token=test:test
                    --companyd-address=http://companyd:8000
                    --token-service-connection=http://tokend:8000
                    --user-service-connection=http://userd:8000
                    --cluster-service-address=http://cluster-service:8000
    links:
     - companyd
     - userd
     - tokend
     - cluster-service
    ports:
     - "9000:8000"

  userd:
    image: quay.io/giantswarm/userd:873ce4c3674a7c51142591220bd8738dd56ff5e3
    command: /opt/userd/userd --listen=0.0.0.0:8000 --storage=etcdv3
    links:
     - etcd
    ports:
     - "9002:8000"
    environment:
     ETCD_PEER: "http://etcd:2379"

  companyd:
    image: quay.io/giantswarm/companyd:f39cc2ff1235c628461cd956a448ea7d6b26077d
    command: /opt/companyd --storage="etcd" --port=8000 --storage-etcd-peers=http://etcd:2379
    links:
     - etcd
    ports:
     - "9003:8000"

  cluster-service:
    image: quay.io/giantswarm/cluster-service:c4811ef98b1f9eec5842b8f36fedb287d7fedced
    command: daemon --server.listen.address="http://0.0.0.0:8000"
                    --service.keypair.certificate.ttl="24h"
                    --service.kubernetes.guest.api.endpointformat="https://api.%s.g8s.fra-1.giantswarm.io"
                    --service.kubernetes.guest.version="v1.5.2_coreos.0"
                    --service.kubernetesd.address="http://mock-kubernetesd:8000"
                    --service.vault.config.address="http://vault:8200"
                    --service.vault.config.pki.allowbaredomains=true
                    --service.vault.config.pki.alloweddomainsformat="%s.g8s.fra-1.giantswarm.io,kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster.local"
                    --service.vault.config.pki.cattl="48h"
                    --service.vault.config.pki.commonnameformat="%s.g8s.fra-1.giantswarm.io"
                    --service.vault.config.pki.token.num=1
                    --service.vault.config.pki.token.ttl="12h"
                    --service.vault.address="http://vault:8200"
                    --service.vault.token="dev-token"
                    --service.storage.kind="etcd"
                    --service.storage.etcd.address="http://etcd:2379"
    links:
     - etcd
     - vault
     - mock-kubernetesd
    ports:
     - "9004:8000"

  tokend:
    image: quay.io/giantswarm/tokend:9b27478a13bd3c0f5f9c3e8b0ad02b7030cc04b9
    command: --host=0.0.0.0 --etcd-peer=http://etcd:2379 --storage-type=etcd --port=8000
    links:
     - etcd
    ports:
     - "9005:8000"

  etcd:
    image: quay.io/coreos/etcd:v3.1.2
    command: etcd --listen-client-urls 'http://0.0.0.0:2379'
                  --advertise-client-urls 'http://0.0.0.0:2379'
    ports:
      - "9006:2379"

  vault:
    image: giantswarm/docker-vault:0.1.0
    command: server -dev
                    -dev-listen-address="0.0.0.0:8200"
                    -dev-root-token-id="dev-token"

  # Always returns 201 OK
  mock-kubernetesd:
    image: registry.giantswarm.io/giantswarm/mock-kubernetesd
