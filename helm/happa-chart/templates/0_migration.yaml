apiVersion: v1
kind: ConfigMap
metadata:
  name: happa-service-migration-configmap
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: happa-service-migration
data:
  config.yaml: |
    service:
      delete:
        resources:
          resourceFile: "/var/run/happa-service-migration/configmap/resources.json"
      kubernetes:
        address: ''
        inCluster: true
        tls:
          caFile: ''
          crtFile: ''
          keyFile: ''
  resources.json: |
    [
        {
            "kind": "Service",
            "name": "happa",
            "namespace": "giantswarm",
            "matchLabels": {
                "app": "happa"
            },
            "excludeLabels": {
            }
        }
    ]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: happa-service-migration
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app: happa-service-migration
spec:
  template:
    spec:
      volumes:
      - name: happa-service-migration-configmap
        configMap:
          name: happa-service-migration-configmap
          items:
          - key: config.yaml
            path: config.yaml
          - key: resources.json
            path: resources.json
      serviceAccountName: happa-service-migration
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: happa-service-migration
        image: quay.io/giantswarm/k8s-migrator:latest
        volumeMounts:
        - name: happa-service-migration-configmap
          mountPath: /var/run/happa-service-migration/configmap/
        args:
        - delete
        - --config.dirs=/var/run/happa-service-migration/configmap/
        - --config.files=config
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: happa-service-migration
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  namespace: {{ .Values.namespace }}
  labels:
    app: happa-service-migration
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: happa-service-migration
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: happa-service-migration
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - "get"
  - "delete"
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - happa-psp
  verbs:
  - "use"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: happa-service-migration 
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app: happa-service-migration
subjects:
  - kind: ServiceAccount
    name: happa-service-migration
    namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: happa-service-migration
  apiGroup: rbac.authorization.k8s.io
