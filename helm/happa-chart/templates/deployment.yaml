apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: happa
  namespace: giantswarm
  labels:
    app: happa
spec:
  replicas: 2
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: happa
    spec:
      volumes:
        {{- if not .Values.Installation.V1.GiantSwarm.Happa.Letsencrypt }}
        - name: happa-certs-secret
          secret:
            secretName: happa-certs-secret
        {{- end }}
        - name: nginx-config
          configMap:
            name: happa-nginx-config
      containers:
      - name: happa
        image: quay.io/giantswarm/happa:[[ .SHA ]]

        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/config

        {{- if not .Values.Installation.V1.GiantSwarm.Happa.Letsencrypt }}
        - name: happa-certs-secret
          mountPath: /etc/nginx/certs
          readOnly: true
        {{- end }}

        env:
        - name: PASSAGE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: happa-configmap
              key: passage-endpoint
        - name: API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: happa-configmap
              key: api-endpoint
        - name: CREATE_CLUSTER_WORKER_TYPE
          valueFrom:
            configMapKeyRef:
              name: happa-configmap
              key: create-cluster-worker-type
        - name: INGRESS_BASE_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: happa-configmap
              key: ingress-base-domain
        - name: INTERCOM_APP_ID
          valueFrom:
            configMapKeyRef:
              name: happa-configmap
              key: intercom-app-id
        - name: ENVIRONMENT
          value: kubernetes
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            {{- if .Values.Installation.V1.GiantSwarm.Happa.Letsencrypt }}
            scheme: HTTP
            {{- else }}
            scheme: HTTPS
            {{- end }}
          initialDelaySeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            {{- if .Values.Installation.V1.GiantSwarm.Happa.Letsencrypt }}
            scheme: HTTP
            {{- else }}
            scheme: HTTPS
            {{- end }}
          initialDelaySeconds: 10
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
          limits:
            cpu: 250m
            memory: 250Mi
      imagePullSecrets:
      - name: happa-pull-secret
