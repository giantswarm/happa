apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      name: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
      containers:
        - name: {{ .Values.image.name }}
          image: "{{ .Values.registry.domain }}/{{ .Values.image.repository }}:{{ .Chart.appVersion }}"
          securityContext:
            readOnlyRootFilesystem: true
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.port }}
              name: http
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: cache-volume
      volumes:
        - name: cache-volume
          emptyDir: {}
      serviceAccount: {{ .Values.name }}
      serviceAccountName: {{ .Values.name }}
