name: happa
namespace: giantswarm
image:
  repository: giantswarm/happa

userID: 101
groupID: 101

port: 8000
protocol: TCP

api:
  address: ""

aws:
  availabilityZones: []
  instance:
    capabilities: {}
    allowed: []
    default: ""

azure:
  availabilityZones: []
  vm:
    vmSize:
      capabilities: {}
      allowed: []
      default: ""

capa:
  availabilityZones: []
  instance:
    capabilities: {}
    allowed: []
    default: ""

capz:
  availabilityZones: []
  vm:
    vmSize:
      capabilities: {}
      allowed: []
      default: ""

gcp:
  availabilityZones: []
  machinetypes:
    capabilities: {}
    allowed: []
    default: ""

ingress:
  externalDNS: false
  tls:
    letsencrypt: false
    clusterIssuer: ""
    crtPemB64: ""
    keyPemB64: ""

guestCluster:
  base: ""

kubernetes:
  versions: {}

happa:
  address: ""
  host: check
  featureFlags:
    mapiAuth: false
    mapiClusters: false
  defaultRequestTimeoutSeconds: 10

happaapi:
  address: ""
  host: check

athena:
  address: ""

managementCluster:
  name: ""
  customer: ""
  pipeline: ""
  provider:
    kind: ""
    flavor: ""
    region: ""

oidc:
  issuerAddress: ""
  giantswarm:
    writeAllGroups: []

passage:
  address: ""

registry:
  domain: gsoci.azurecr.io

security:
  restrictAccess:
    api: false
  subnet:
    vpn: ""
    customer:
      public: ""
      private: ""

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true

global:
  podSecurityStandards:
    enforced: false
