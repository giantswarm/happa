{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "properties": {
        "patternProperties": {
            "type": "object",
            "title": "Pattern properties",
            "properties": {
                "objectOfIntegers": {
                    "type": "object",
                    "title": "Object of integers",
                    "patternProperties": {
                        "^[a-z0-9]{5,10}$": {
                            "type": "integer"
                        }
                    }
                },
                "objectOfObjects": {
                    "type": "object",
                    "title": "Object of objects",
                    "patternProperties": {
                        "^[a-z0-9]{5,10}$": {
                            "type": "object",
                            "title": "Node pool",
                            "properties": {
                                "instanceType": {
                                    "type": "string",
                                    "title": "Instance type"
                                },
                                "maxSize": {
                                    "type": "integer",
                                    "title": "Maximum number of nodes"
                                },
                                "minSize": {
                                    "type": "integer",
                                    "title": "Minimum number of nodes"
                                }
                            }
                        }
                    }
                },
                "objectOfObjectsWithDefault": {
                    "type": "object",
                    "title": "Object of objects with default value",
                    "patternProperties": {
                        "^[a-z0-9]{5,10}$": {
                            "type": "object",
                            "title": "Node pool",
                            "properties": {
                                "instanceType": {
                                    "type": "string",
                                    "title": "Instance type"
                                },
                                "maxSize": {
                                    "type": "integer",
                                    "title": "Maximum number of nodes"
                                },
                                "minSize": {
                                    "type": "integer",
                                    "title": "Minimum number of nodes"
                                }
                            }
                        }
                    }
                },
                "objectOfStrings": {
                    "type": "object",
                    "title": "Object of strings",
                    "patternProperties": {
                        "^[a-z0-9]{5,10}$": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "additionalProperties": {
            "type": "object",
            "title": "Additional properties",
            "properties": {
                "objectOfIntegers": {
                    "type": "object",
                    "title": "Object of integers",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "objectOfObjects": {
                    "type": "object",
                    "title": "Object of objects",
                    "additionalProperties": {
                        "type": "object",
                        "title": "Node pool",
                        "properties": {
                            "instanceType": {
                                "type": "string",
                                "title": "Instance type"
                            },
                            "maxSize": {
                                "type": "integer",
                                "title": "Maximum number of nodes"
                            },
                            "minSize": {
                                "type": "integer",
                                "title": "Minimum number of nodes"
                            }
                        }
                    }
                },
                "objectOfObjectsWithDefault": {
                    "type": "object",
                    "title": "Object of objects with default value",
                    "additionalProperties": {
                        "type": "object",
                        "title": "Node pool",
                        "properties": {
                            "instanceType": {
                                "type": "string",
                                "title": "Instance type"
                            },
                            "maxSize": {
                                "type": "integer",
                                "title": "Maximum number of nodes"
                            },
                            "minSize": {
                                "type": "integer",
                                "title": "Minimum number of nodes"
                            }
                        }
                    }
                },
                "objectOfStrings": {
                    "type": "object",
                    "title": "Object of strings",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "arrayFields": {
            "type": "object",
            "title": "Array fields",
            "properties": {
                "arrayMinMaxItems": {
                    "type": "array",
                    "title": "Array with min/max items",
                    "description": "Array with the minimum and maximum number of items",
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 2,
                    "minItems": 1
                },
                "arrayOfObjects": {
                    "type": "array",
                    "title": "Array of objects",
                    "items": {
                        "type": "object",
                        "properties": {
                            "age": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "arrayOfObjectsWithTitle": {
                    "type": "array",
                    "title": "Array of objects with title",
                    "items": {
                        "type": "object",
                        "title": "Array item object",
                        "description": "Description of array item object",
                        "properties": {
                            "age": {
                                "type": "number"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "arrayOfStrings": {
                    "type": "array",
                    "title": "Array of strings",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "booleanFields": {
            "type": "object",
            "title": "Boolean fields",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Boolean field with title and description."
                }
            }
        },
        "internal": {
            "type": "object",
            "properties": {
                "patternProperties": {
                    "type": "object",
                    "properties": {
                        "objectOfObjectsWithDefault": {
                            "type": "object",
                            "default": {
                                "def00": {
                                    "instanceType": "m5.xlarge",
                                    "minSize": 3
                                }
                            }
                        }
                    }
                },
                "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "objectOfObjectsWithDefault": {
                            "type": "object",
                            "default": {
                                "def00": {
                                    "instanceType": "m5.xlarge",
                                    "minSize": 3
                                }
                            }
                        }
                    }
                }
            }
        },
        "logic": {
            "type": "object",
            "title": "Logic and subschemas",
            "description": "Uses of 'anyOf', 'oneOf', and 'not'.",
            "properties": {
                "anyOf": {
                    "type": "object",
                    "title": "Subschema choice using 'anyOf'",
                    "properties": {
                        "anyOfDeprecated": {
                            "title": "Property with subschemas using 'anyOf' and 'deprecated'",
                            "description": "Only the second declared subschema (number, minimum=3) should be visible.",
                            "anyOf": [
                                {
                                    "type": "string",
                                    "deprecated": true,
                                    "minLength": 3
                                },
                                {
                                    "type": "number",
                                    "minimum": 3
                                }
                            ]
                        },
                        "anyOfSimple": {
                            "title": "Property with two subschemas using 'anyOf'",
                            "description": "Only the first declared subschema (string, minLength=3) should be visible.",
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 3
                                },
                                {
                                    "type": "number",
                                    "minimum": 3
                                }
                            ]
                        }
                    }
                },
                "not": {
                    "type": "object",
                    "title": "Constraints defined via 'not'",
                    "properties": {
                        "stringNot": {
                            "type": "string",
                            "title": "String with constraints defined via 'not'",
                            "description": "Value must not be 'forbidden'.",
                            "not": {
                                "const": "forbidden"
                            }
                        }
                    }
                },
                "oneOf": {
                    "type": "object",
                    "title": "Subschema choice using 'oneOf'",
                    "properties": {
                        "stringPatternOrEmpty": {
                            "type": "string",
                            "title": "String matching multiple patterns",
                            "description": "Value must match one of the patterns - ^[a-z]$ or ^[0-9]$.",
                            "oneOf": [
                                {
                                    "pattern": "^[a-z]$"
                                },
                                {
                                    "pattern": "^[0-9]$"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "numericFields": {
            "type": "object",
            "title": "Numeric fields",
            "properties": {
                "integer": {
                    "type": "integer",
                    "title": "Integer",
                    "description": "Integer field with title and description."
                },
                "integerEnum": {
                    "type": "integer",
                    "title": "Integer enum",
                    "description": "Integer field with enumerated values and custom labels.",
                    "oneOf": [
                        {
                            "title": "One",
                            "const": 1
                        },
                        {
                            "title": "Two",
                            "const": 2
                        },
                        {
                            "title": "Three",
                            "const": 3
                        }
                    ]
                },
                "integerLimit": {
                    "type": "integer",
                    "title": "Integer with min/max values",
                    "description": "Integer field with minimum value 2 and maximum value 5.",
                    "maximum": 5,
                    "minimum": 2
                },
                "number": {
                    "type": "number",
                    "title": "Number",
                    "description": "Number field with title and description."
                },
                "numberLimit": {
                    "type": "number",
                    "title": "Number with min/max values",
                    "description": "Number field with minimum value 2 and maximum value 5.",
                    "maximum": 5,
                    "minimum": 2
                }
            }
        },
        "objectFields": {
            "type": "object",
            "title": "Object fields",
            "properties": {
                "object": {
                    "type": "object",
                    "title": "Object",
                    "properties": {
                        "age": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "objectRequired": {
                    "type": "object",
                    "title": "Object with required",
                    "description": "Object where properties are required.",
                    "required": [
                        "active",
                        "name"
                    ],
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "age": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "stringFields": {
            "type": "object",
            "title": "String fields",
            "properties": {
                "string": {
                    "type": "string",
                    "title": "String",
                    "description": "String field with title and description."
                },
                "stringCustomLabels": {
                    "type": "string",
                    "title": "String enum with custom labels",
                    "description": "String field with enumerated values and custom labels.",
                    "oneOf": [
                        {
                            "title": "First Value",
                            "const": "firstValue"
                        },
                        {
                            "title": "Second Value",
                            "const": "secondValue"
                        },
                        {
                            "title": "Third Value",
                            "const": "thirdValue"
                        }
                    ]
                },
                "stringEnum": {
                    "type": "string",
                    "title": "String enum",
                    "description": "String field with enumerated values.",
                    "enum": [
                        "firstValue",
                        "secondValue",
                        "thirdValue"
                    ]
                },
                "stringFormat": {
                    "type": "string",
                    "title": "String with format",
                    "description": "String field with format 'ipv4'.",
                    "format": "ipv4"
                },
                "stringLength": {
                    "type": "string",
                    "title": "String with min/max length",
                    "description": "String field with minLength and maxLength validation. Submit the form to see validation errors.",
                    "maxLength": 5,
                    "minLength": 2
                },
                "stringLong": {
                    "type": "string",
                    "title": "String field with a very long title and a very long description that require special handling and treatment so that its display in the form is optimized",
                    "description": "Here's a string field with a very long title and a very long description. Notice how long the title and the description for this string field is. The title and the description for this string field are both significantly longer than the title and the description for the other fields in this form."
                },
                "stringPattern": {
                    "type": "string",
                    "title": "String with pattern",
                    "description": "String field with pattern validation for regular expression '^[a-z0-9]{10,20}$'.",
                    "pattern": "^[a-z0-9]{10,20}$"
                }
            }
        }
    }
}
