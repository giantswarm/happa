machine:
  services:
    - docker

test:
  override:
    - npm test
    - mkdir dist
    - grunt build
    - docker build -t registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -f Dockerfile .

    # Just a little smoke test. Starts the production container and checks
    # if a line of text from index.html is in there.
    - docker run -p 8000:8000 -d registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
    - curl -k https://localhost:8000 | grep Happa # Grep returns non 0 exit code if it can't find the text, which fails the smoke test

deployment:
  master:
    branch: master
    commands:
      # push the docker image
      - docker login --email=$DOCKER_EMAIL --username=$DOCKER_USERNAME --password="$DOCKER_PASSWORD" registry.giantswarm.io
      - docker push registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

      # fetch and configure kubectl
      - curl --silent --max-time 60 --remote-name https://storage.googleapis.com/kubernetes-release/release/v1.5.2/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - echo -n $G8S_CA | base64 --decode > ./ca.pem
      - echo -n $G8S_CRT | base64 --decode > ./crt.pem
      - echo -n $G8S_KEY | base64 --decode > ./key.pem
      - ./kubectl config set-cluster g8s-cluster --server=https://api.g8s.fra-1.giantswarm.io --certificate-authority=./ca.pem
      - ./kubectl config set-credentials g8s-admin --certificate-authority=./ca.pem --client-certificate=./crt.pem --client-key=./key.pem
      - ./kubectl config set-context g8s-system --cluster=g8s-cluster --user=g8s-admin
      - ./kubectl config use-context g8s-system
      - ./kubectl cluster-info

      # update the manifests with the tag, apply the new manifests, and watch the rollout
      - sed -i "s/%%DOCKER_TAG%%/$CIRCLE_SHA1/g" ./kubernetes/production.yml
      - ./kubectl apply --namespace=$CIRCLE_PROJECT_USERNAME -f ./kubernetes/production.yml
      - ./kubectl rollout --namespace=$CIRCLE_PROJECT_USERNAME status deployment/$CIRCLE_PROJECT_REPONAME

  staging:
    branch: /.*/
    commands:
      # push the docker image
      - docker login --email=$DOCKER_EMAIL --username=$DOCKER_USERNAME --password="$DOCKER_PASSWORD" registry.giantswarm.io
      - docker push registry.giantswarm.io/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

      # fetch and configure kubectl
      - curl --silent --max-time 60 --remote-name https://storage.googleapis.com/kubernetes-release/release/v1.5.2/bin/linux/amd64/kubectl && chmod +x ./kubectl
      - echo -n $G8S_CA | base64 --decode > ./ca.pem
      - echo -n $G8S_CRT | base64 --decode > ./crt.pem
      - echo -n $G8S_KEY | base64 --decode > ./key.pem
      - ./kubectl config set-cluster g8s-cluster --server=https://api.g8s.fra-1.giantswarm.io --certificate-authority=./ca.pem
      - ./kubectl config set-credentials g8s-admin --certificate-authority=./ca.pem --client-certificate=./crt.pem --client-key=./key.pem
      - ./kubectl config set-context g8s-system --cluster=g8s-cluster --user=g8s-admin
      - ./kubectl config use-context g8s-system
      - ./kubectl cluster-info

      # update the manifests with the tag, apply the new manifests, and watch the rollout
      - sed -i "s/%%DOCKER_TAG%%/$CIRCLE_SHA1/g" ./kubernetes/staging.yml
      - ./kubectl apply --namespace=$CIRCLE_PROJECT_USERNAME -f ./kubernetes/staging.yml
      - ./kubectl rollout --namespace=$CIRCLE_PROJECT_USERNAME status deployment/$CIRCLE_PROJECT_REPONAME
